import java.awt.CardLayout;
import java.awt.GridLayout;
import java.util.Random;
import java.util.Scanner;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class Main
{
	private static int xSize=640;
	private static int ySize=480;
	
	public static void main(String[] args) 
	{
	
		//setting up the frame
				int towersNumber=100;
				JFrame frame = new JFrame();
				frame.setSize(xSize,ySize);
				frame.setResizable(false);
				frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
				frame.setTitle("How2Sort");
				frame.setLayout(new GridLayout());
				frame.setVisible(true);

				//setting up the towers:
				Tower[] TA = new Tower[towersNumber];
				fillTowerArrayRandomly(TA, ySize,xSize);

				//adding the sorterView to the frame:
				SortersView sortersView = new SortersView(TA);
				frame.add(sortersView);
				
				sortersView.showInsertion();




		Sorters s1=new Sorters();
		Random rand=new Random();
		//building the array
		int arrayPlaces=50;
		int maxNum=50;
		int minNum=1;
		int[] array=new int[arrayPlaces];
		for (int i = 0; i < array.length; i++) {
			array[i]=rand.nextInt(maxNum)+minNum;
		}

		System.out.println("before sort:");
		for (int i = 0; i < array.length; i++) {
			System.out.print(array[i] +", ");
		}
		Scanner scan=new Scanner(System.in);
		System.out.println("\n1 for Insertion, 2 for mergeSort");
		int ans=scan.nextInt();

		if(ans==1)
			s1.Insertion(array);
		if(ans==2)
			s1.mergeSort(array);

	}

	//fill the tower array with towers, the towers have random height
		public static void fillTowerArrayRandomly(Tower[] TA,int frameHeight,int frameWidth)
		{
			Random rand = new Random();
			int height;
			int width = (int) (frameWidth/(TA.length*1.6));
			int spaces = (int) (width*2);
			
			for (int i = 0; i < TA.length; i++) 
			{
				//Tower(x,y,height)
				height=rand.nextInt(420)+10;
				TA[i] =new Tower(i*spaces,width,height,ySize);
			}
		}



}
